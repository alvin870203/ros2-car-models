<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


  <!-- RVIZ MATERIAL COLOUR -->
  <material name="silver">
    <color rgba="0.1 0.1 0.1 0.5" />
  </material>

  <material name="darkgrey">
    <color rgba="0 0 0 0.7" />
  </material>


  <!-- ROBOT DEFINITION -->
  <link name="base_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="chassis_link_joint" type="fixed">
    <origin xyz="-0.2519 0 0.4936" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="chassis_link" />
  </joint>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="2.34 0 0.24" rpy="0 0 0" />
    <parent link="chassis_link" />
    <child link="hokuyo_link" />
  </joint>

  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.05 0.05 0.05" />
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/hokuyo.dae" />
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <link name="chassis_link">
    <inertial>
      <!-- NOTE - The key to avoid non-driven wheel from slipping is to make the center of mass of the chassis at about the same height of the center of the wheel. -->
      <origin rpy="0 0 0" xyz="0.07307 0.0 -0.1" />
      <mass value="1580" />
      <inertia ixx="442.7692" ixy="0.0" ixz="0.0" iyy="1997.8579" iyz="0.0" izz="2238.0524" />
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/chassis_link.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="silver" />
    </visual>
    <collision>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/chassis_link.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>
  </link>

  <joint name="spoiler_joint" type="fixed">
    <origin xyz="0.05 0 -0.05" rpy="0 0 0" />
    <parent link="chassis_link" />
    <child link="spoiler_link" />
  </joint>

  <link name="spoiler_link">
    <visual>
      <origin rpy="1.5708 0 1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/spoiler.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="silver" />
    </visual>
    <collision>
      <origin rpy="1.5708 0 1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/spoiler.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>
  </link>

  <link name="br_1">
    <inertial>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mass (or moment) not too large. -->
      <mass value="11" />
      <inertia ixx="0.58631238" ixy="0.0" ixz="0.0" iyy="0.33552910" iyz="0.0" izz="0.33552910" />
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5708" xyz="1.0136 0.8750 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/br_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision name="br_1_collision">
      <!-- NOTE - Somehow libgazebo_ros_ackermann_drive.so don't work with collision using this custom mesh. Only built-in cylinder and sphere works, and built-in box don't work either.
      <origin rpy="0 0 0" xyz="-0.8750 1.0136 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/br_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      -->
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <sphere radius="0.3425"/>
      </geometry>
    </collision>
  </link>

  <link name="bl_1">
    <inertial>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mass (or moment) not too large. -->
      <mass value="11" />
      <inertia ixx="0.58631238" ixy="0.0" ixz="0.0" iyy="0.33552910" iyz="0.0" izz="0.33552910" />
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5708" xyz="1.0136 -0.8750 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/bl_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision name="bl_1_collision">
      <!-- NOTE - Somehow libgazebo_ros_ackermann_drive.so don't work with collision using this custom mesh. Only built-in cylinder and sphere works, and built-in box don't work either.
      <origin rpy="0 0 0" xyz="0.8750 1.0136 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/bl_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      -->
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <sphere radius="0.3425"/>
      </geometry>
    </collision>
  </link>

  <link name="fr_1">
    <inertial>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mass (or moment) not too large. -->
      <mass value="11" />
      <inertia ixx="0.58631238" ixy="0.0" ixz="0.0" iyy="0.33552910" iyz="0.0" izz="0.33552910" />
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5708" xyz="-1.5174 0.8750 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/fr_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision name="fr_1_collision">
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <sphere radius="0.3425"/>
      </geometry>
    </collision>
  </link>

  <link name="fl_1">
    <inertial>
      <origin rpy="0 0 -1.5708" xyz="0 0 0" />
      <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mass (or moment) not too large. -->
      <mass value="11" />
      <inertia ixx="0.58631238" ixy="0.0" ixz="0.0" iyy="0.33552910" iyz="0.0" izz="0.33552910" />
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5708" xyz="-1.5174 -0.8750 0.1444" />
      <geometry>
        <mesh filename="file://$(find description)/meshes/fl_1.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision name="fl_1_collision">
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <sphere radius="0.3425"/>
      </geometry>
    </collision>
  </link>

  <link name="fr_steer_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="1" />
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>

  <link name="fl_steer_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="1" />
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>

  <link name="br_steer_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="1" />
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>

  <link name="bl_steer_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="1" />
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>

  <joint name="br_axle" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="br_steer_1" />
    <child link="br_1" />
    <axis xyz="0.0 1.0 0.0" />
  </joint>

  <joint name="bl_axle" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="bl_steer_1" />
    <child link="bl_1" />
    <axis xyz="0.0 1.0 0.0" />
  </joint>

  <joint name="fr_axle" type="continuous">
    <!-- NOTE - The key to avoid non-driven wheels split out is to make sure the steering joint is at the same location as the wheel rotation joint (or the center of mass of it). -->
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="fr_steer_1" />
    <child link="fr_1" />
    <axis xyz="0.0 1.0 0.0" />
  </joint>

  <joint name="fl_axle" type="continuous">
    <!-- NOTE - The key to avoid non-driven wheels split out is to make sure the steering joint is at the same location as the wheel rotation joint (or the center of mass of it). -->
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="fl_steer_1" />
    <child link="fl_1" />
    <axis xyz="0.0 1.0 0.0" />
  </joint>

  <joint name="fr_steer" type="revolute">
    <origin rpy="0 0 0" xyz="1.517363 -0.8250 -0.144363" />
    <parent link="chassis_link" />
    <child link="fr_steer_1" />
    <axis xyz="0.0 0.0 1.0" />
    <dynamics damping="50.0" friction="0.01" />
    <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
  </joint>

  <joint name="fl_steer" type="revolute">
    <origin rpy="0 0 0" xyz="1.517363 0.8250 -0.144363" />
    <parent link="chassis_link" />
    <child link="fl_steer_1" />
    <axis xyz="0.0 0.0 1.0" />
    <dynamics damping="50.0" friction="0.01" />
    <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
  </joint>

  <xacro:if value="$(arg use_4ws)">
    <joint name="br_steer" type="revolute">
      <origin rpy="0 0 0" xyz="-1.0136 -0.8750 -0.144363" />
      <parent link="chassis_link" />
      <child link="br_steer_1" />
      <axis xyz="0.0 0.0 1.0" />
      <dynamics damping="50.0" friction="0.01" />
      <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
    </joint>

    <joint name="bl_steer" type="revolute">
      <origin rpy="0 0 0" xyz="-1.0136 0.8750 -0.144363" />
      <parent link="chassis_link" />
      <child link="bl_steer_1" />
      <axis xyz="0.0 0.0 1.0" />
      <dynamics damping="50.0" friction="0.01" />
      <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
    </joint>
  </xacro:if>
  <xacro:unless value="$(arg use_4ws)">
    <joint name="br_steer" type="fixed">
      <origin rpy="0 0 0" xyz="-1.0136 -0.8750 -0.144363" />
      <parent link="chassis_link" />
      <child link="br_steer_1" />
      <axis xyz="0.0 0.0 1.0" />
      <dynamics damping="50.0" friction="0.01" />
      <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
    </joint>

    <joint name="bl_steer" type="fixed">
      <origin rpy="0 0 0" xyz="-1.0136 0.8750 -0.144363" />
      <parent link="chassis_link" />
      <child link="bl_steer_1" />
      <axis xyz="0.0 0.0 1.0" />
      <dynamics damping="50.0" friction="0.01" />
      <limit effort="1000.0" lower="-0.95" upper="0.95" velocity="100" />
    </joint>
  </xacro:unless>

  <gazebo reference="chassis_link">
    <material>Gazebo/White</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="spoiler_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="br_1">
    <material>Gazebo/DarkGrey</material>
    <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mu1 & mu2 is large enough, and make sure the kp is specified as here. (minDepth seems to have no effect) -->
    <mu1>100</mu1>
    <mu2>100</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="bl_1">
    <material>Gazebo/DarkGrey</material>
    <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mu1 & mu2 is large enough, and make sure the kp is specified as here. (minDepth seems to have no effect) -->
    <mu1>100</mu1>
    <mu2>100</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="fr_1">
    <material>Gazebo/DarkGrey</material>
    <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mu1 & mu2 is large enough, and make sure the kp is specified as here. (minDepth seems to have no effect) -->
    <mu1>100</mu1>
    <mu2>100</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="fl_1">
    <material>Gazebo/DarkGrey</material>
    <!-- NOTE - The key to avoid non-driven wheel from slipping is to make sure the mu1 & mu2 is large enough, and make sure the kp is specified as here. (minDepth seems to have no effect) -->
    <mu1>100</mu1>
    <mu2>100</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="fr_steer_1">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="fl_steer_1">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="br_steer_1">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="bl_steer_1">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

</robot>